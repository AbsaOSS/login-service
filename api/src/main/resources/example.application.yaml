loginsvc:
  rest:
    # Rest General Config
    jwt:
      #Configuration to generate the key in memory
      generate-in-memory:
        access-exp-time: 15min
        refresh-exp-time: 9h
        key-rotation-time: 9h
        alg-name: "RS256"
      #Instead of generating the key in memory
      #The Below Config allows for the application to fetch keys from AWS Secrets Manager.
      aws-secrets-manager:
        secret-name: "secret"
        region: "region"
        private-key-field-name: "privateKey"
        public-key-field-name: "publicKey"
        access-exp-time: 15min
        refresh-exp-time: 9h
        poll-time: 5min
        key-phase-out-time: 2min
        alg-name: "RS256"
    config:
      # Generates git.properties file for use on info endpoint.
      git-info:
        # Generate Git Information on each run of the application.
        generate-git-properties: true
        # Generate git.properties file on application startup.
        # Generate-git-properties must be true for this config to take effect.
        # Once file has been generated, you may set these properties to false as the application will now read the details from the generated file on start-up.
        generate-git-properties-file: false

    # Rest Auth Config (AD)
    auth:
      provider:
        # Users (config-defined)
        users:
          # Auth Protocol
          # Set the order of the protocol starting from 1
          # Set to 0 to disable or simply exclude the users tag from config
          # NOTE: At least 1 auth protocol needs to be enabled
          order: 1
          known-users:
            - username: "user1"
              password: "password1"
              groups: []
            - username: "TestUser"
              password: "password123"
              groups:
                - "groupA"
                - "groupB"
              attributes:
                displayname: "Test User, A.C.E."
                email: "test@abs.com"
        ldap:
          # Auth Protocol
          # Set the order of the protocol starting from 1
          # Set to 0 to disable or simply exclude the ldap tag from config
          # NOTE: At least 1 auth protocol needs to be enabled
          order: 0
          domain: "some.domain.com"
          url: "ldaps://some.domain.com:636/"
          search-filter: "(samaccountname={1})"
          service-account:
            # The account-pattern is used to format the username of the user to be used to authenticate with the ldap server.
            account-pattern: "CN=%s,OU=Users,OU=Organization1,DC=my,DC=domain,DC=com"
            # The in-config-account is used to authenticate with the ldap server.
            in-config-account:
                username: "svc-ldap"
                password: "password"
          # Instead of using the in-config-account, the application can fetch the username and password from AWS Secrets Manager.
          #aws-secrets-manager-account:
              #secret-name: "secret"
              #region: "region"
              #username-field-name: "username"
              #password-field-name: "password"
          #enable-kerberos:
            #krb-file-location: "/etc/krb5.conf"
            #keytab-file-location: "/etc/keytab"
            #spn: "HTTP/Host"
            #debug: true
          attributes:
            # The FieldName is the key used to search ldap and the value is the value used to name the JWT claim.
            # ldapFieldName: claimFieldName
            mail: "email"
            displayname: "displayname"

# App Config
spring:
  application:
    name: "login-service"
  jmx:
    enabled: true
server:
  port: 9090

# Health and Info Check Config + JMX Config
springdoc:
  show-actuator: true

management:
  health:
    ldap:
      # TODO: Enable Ldap check for actuator/health when fully Implemented - issue #34
      enabled: "false"
  # Expose information under Actuator/info
  info:
    # Exposes any property marked under "info" in the config
    env:
      enabled: "true"
    # Exposes git related information from the git.properties file
    git:
      enabled: "true"
    # Exposes Java runtime information
    java:
      enabled: "true"
    # Exposes build information
    build:
      enabled: "true"
  endpoints:
    jmx:
      exposure:
        include:
          - "health"
          - "info"
    web:
      exposure:
        include:
          - "health"
          - "info"
  endpoint:
    health:
      show-details: "never"

# Information to be exposed by the 'env' tag in the springboot actuator
info:
  app:
    name: "${spring.application.name}"
    build: "0.1"
    description: "Application used a reusable authentication tool"
    env: "Dev"
  security:
    ldap: "Enabled"
